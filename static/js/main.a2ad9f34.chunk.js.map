{"version":3,"sources":["Post.js","firebase.js","ImageUpload.js","App.js","serviceWorker.js","index.js"],"names":["Post","username","userAvatar","caption","imageURL","comments","className","Avatar","src","alt","map","comment","commenttext","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","ImageUpload","useState","setCaption","image","setImage","progress","setProgress","Input","type","name","onChange","event","target","value","placeholder","max","e","files","Button","onClick","ref","put","on","snapshot","pgrs","Math","round","bytesTransferred","totalBytes","console","log","error","child","getDownloadURL","then","url","collection","add","timestamp","FieldValue","serverTimestamp","alert","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","openPost","setOpenPost","setUsername","password","setPassword","email","setEmail","userImage","setUserImage","user","setUser","avatarURL","setAvatarURL","React","modalStyle","useEffect","unsubscribe","onAuthStateChanged","authUser","photoURL","displayName","updateProfile","onSnapshot","docs","doc","id","post","data","endIcon","Modal","onClose","style","preventDefault","createUserWithEmailAndPassword","message","catch","signInWithEmailAndPassword","signOut","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2ad9f34.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Post.css'\r\nimport Avatar from '@material-ui/core/avatar'\r\n\r\n\r\nfunction Post({ username, userAvatar, caption, imageURL, comments}) {\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__header\">\r\n        <Avatar src={userAvatar} alt={username} className=\"post__headerAvatar\" />\r\n        <h3>{username}</h3>\r\n      </div>\r\n      <img className=\"post__image\" src={imageURL} alt=\"Image not found\" />\r\n      <div className=\"post__footer\"><strong>{username}:</strong>{caption}</div>\r\n      <div className=\"post__commentbox\">\r\n        {\r\n          comments.map(comment => (\r\n          <div className=\"post__comment\"><strong>{comment.username}</strong> : {comment.commenttext}</div>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyA79AKi494FNiNFUNjCBqqOneDthQMhpUE\",\r\n  authDomain: \"socialer-ab176.firebaseapp.com\",\r\n  databaseURL: \"https://socialer-ab176.firebaseio.com\",\r\n  projectId: \"socialer-ab176\",\r\n  storageBucket: \"socialer-ab176.appspot.com\",\r\n  messagingSenderId: \"62578825669\",\r\n  appId: \"1:62578825669:web:e65a6d0979b8c3f07093ac\",\r\n  measurementId: \"G-R00TB46SH7\"\r\n})\r\n\r\nconst db = firebaseApp.firestore()\r\nconst auth = firebase.auth()\r\nconst storage = firebase.storage()\r\n\r\nexport { db, auth, storage }\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase'\r\n//import './ImageUpload.css'\r\nimport {Button, Input} from '@material-ui/core';\r\nimport { storage, db } from './firebase'\r\n\r\n\r\nfunction ImageUpload({username, userAvatar}) {\r\n  const [caption,setCaption] = useState('')\r\n  const [image,setImage] = useState(null)\r\n  const [progress,setProgress] = useState(0)\r\n\r\n  const handleChange = (e) => {\r\n    if(e.target.files[0]){\r\n      setImage(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const handleUpload = () =>{\r\n    const uploadTask = storage.ref(`Images/${image.name}`).put(image)\r\n    uploadTask.on(\"state_changed\",(snapshot) => {\r\n      const pgrs = Math.round(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      )\r\n      setProgress(pgrs)\r\n      console.log(snapshot.bytesTransferred / snapshot.totalBytes )\r\n    },(error) => {\r\n      console.log(error);\r\n    },\r\n    () =>{\r\n      storage\r\n        .ref('Images')\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          db.collection('posts').add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            caption: caption,\r\n            imageURL: url,\r\n            username: username,\r\n            userAvatar: userAvatar,\r\n            comments: []\r\n          })\r\n          alert(\"Posted...\")\r\n          setProgress(0)\r\n          setCaption(\"\")\r\n          setImage(null)\r\n        })\r\n    }\r\n  )\r\n  }\r\n\r\n  return (\r\n    <div className=\"ImageUpload\">\r\n      <Input type=\"text\" name=\"caption\" onChange={event => setCaption(event.target.value)} value={caption} placeholder=\"Enter your caption\" />\r\n      <progress value={progress} max=\"100\" />\r\n      <Input type=\"file\" name=\"image\" onChange={handleChange} />\r\n      <Button onClick={handleUpload}>\r\n        Upload\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Avatar from '@material-ui/core/avatar'\nimport Post from './Post'\nimport ImageUpload from './ImageUpload'\nimport { db, auth, storage } from './firebase'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport {Button, Input} from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #aa4488',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [posts,setPosts] = useState([]);\n  const [open,setOpen] = useState(false)\n  const [openSignIn,setOpenSignIn] = useState(false)\n  const [openPost,setOpenPost] = useState(false)\n  const [username,setUsername] = useState('')\n  const [password,setPassword] = useState('')\n  const [email,setEmail] = useState('')\n  const [userImage,setUserImage] = useState(null)\n  const [user,setUser] = useState(null)\n  const [avatarURL,setAvatarURL] = useState(null)\n\n  const [modalStyle] = React.useState(getModalStyle);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if(authUser){\n        //USer has logged in\n        //console.log(authUser)\n        setUser(authUser)\n        if(authUser.photoURL != null){\n          setAvatarURL(authUser.photoURL)\n        }\n        if(authUser.displayName){\n\n        }else{\n          return authUser.updateProfile({\n            displayName: username\n          })\n        }\n      }\n      else{\n        //logged out\n        setUser(null)\n      }\n\n    })\n\n    return () => {\n      unsubscribe()\n    }\n  },[user,username])\n\n  useEffect(() =>{\n    db.collection('posts').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })))\n    })\n  },[])\n\n  const handleChange = (e) => {\n    if(e.target.files[0]){\n      setUserImage(e.target.files[0])\n    }\n  }\n\n  const signUp = (event) => {\n    event.preventDefault()\n\n    auth.createUserWithEmailAndPassword(email,password)\n    .then((authUser) => {\n      authUser.user.updateProfile({\n        displayName: username\n      })\n      const uploadTask = storage.ref(`ProfileImages/${username}`).put(userImage)\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          console.log(snapshot.bytesTransferred / snapshot.totalBytes )\n        },\n        (error) => {alert(error.message)},\n        () => {\n          storage\n            .ref('ProfileImages')\n            .child(username)\n            .getDownloadURL()\n            .then((url => {\n              setAvatarURL(url)\n              authUser.user.updateProfile({\n                photoURL: url\n              })\n              alert(\"user created successfully\")\n            }))\n        }\n      )\n\n    })\n    .catch((error) => alert(error.message))\n\n    setOpen(false)\n  }\n\n  const signIn = (event) => {\n    event.preventDefault()\n\n    auth.signInWithEmailAndPassword(email,password)\n    .then((authUser) => {\n      setUser(authUser)\n      setAvatarURL(authUser.user.photoURL)\n      console.log(authUser)\n    })\n    .catch((error) => alert(error.message))\n\n    setOpenSignIn(false)\n  }\n\n  return (\n    <div className=\"app\">\n      {user?.displayName ? (\n        <div className=\"app__postButton\">\n          <Button type=\"button\" name=\"button\" onClick={() => setOpenPost(true)} endIcon={<CloudUploadIcon />}>  Add</Button>\n        </div>\n        ) : (\n          <h3>Log in or SignUp to start adding your movements too..</h3>\n        )}\n      <Modal\n        open={openPost}\n        onClose={() => setOpenPost(false)}\n      >\n      <div style={modalStyle} className={classes.paper}>\n        { user?.displayName ? (\n          <ImageUpload username={user.displayName} userAvatar={avatarURL}/>\n\n          ) : (\n          <h3>You need to login... How am I supposed to allow you to post without login..</h3>\n\n          )}\n      </div>\n      </Modal>\n      <Modal //Sgn UP model\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n      <div style={modalStyle} className={classes.paper}>\n        <div id=\"simple-modal-description\">\n          <center>\n            <img className=\"app__headerImage\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"logo\" />\n          </center>\n          <form className=\"app_signUp\">\n            <Input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Input type=\"file\" name=\"image\" onChange={handleChange} />\n\n            <Button  type=\"submit\" onClick={signUp}>SIgn Up</Button>\n          </form>\n        </div>\n\n      </div>\n      </Modal>\n\n      <Modal //Sign in model\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n      >\n      <div style={modalStyle} className={classes.paper}>\n        <div id=\"simple-modal-description\">\n          <center>\n            <img className=\"app__headerImage\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"logo\" />\n          </center>\n          <form className=\"app_signUp\">\n\n            <Input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button  type=\"submit\" onClick={signIn}>SIgn In</Button>\n          </form>\n        </div>\n\n      </div>\n      </Modal>\n      <div className=\"app__header\">\n        <div className=\"app__headerImage\">\n          Socialer\n        </div>\n        <div className=\"app__headerLogin\">\n        {user ? (\n          <div className=\"app__headerRight\">\n          <Avatar src={avatarURL} alt={username} />\n          <Button onClick={() => auth.signOut()} id=\"signup-btn\">Log Out</Button>\n          </div>\n        ): (\n        <div>\n          <Button onClick={() => setOpenSignIn(true)} >Sign In</Button>\n          <Button onClick={() => setOpen(true)} >SignUp</Button>\n        </div>\n        )}\n        </div>\n      </div>\n      {\n        posts.map(({id,post}) => (\n          <Post key={id} username={post.username} userAvatar={post.userAvatar} caption={post.caption} imageURL={post.imageURL} comments={post.comments}/>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}