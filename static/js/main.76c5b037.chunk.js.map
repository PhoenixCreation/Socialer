{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","UserPopUp.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postId","crntuser","username","userAvatar","caption","imageURL","comments","useState","commentText","setCommentText","className","Avatar","src","alt","map","comment","commenttext","displayName","Input","type","placeholder","value","onChange","e","target","Button","onClick","preventDefault","collection","doc","update","FieldValue","arrayUnion","alert","ImageUpload","setCaption","image","setImage","progress","setProgress","name","event","max","files","ref","put","on","snapshot","pgrs","Math","round","bytesTransferred","totalBytes","console","log","error","child","getDownloadURL","then","url","add","timestamp","serverTimestamp","UserPopUp","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","openPost","setOpenPost","openUser","setOpenUser","setUsername","password","setPassword","email","setEmail","userImage","setUserImage","user","setUser","avatarURL","setAvatarURL","React","modalStyle","useEffect","unsubscribe","onAuthStateChanged","authUser","photoURL","updateProfile","onSnapshot","docs","id","post","data","endIcon","Modal","onClose","style","createUserWithEmailAndPassword","message","followers","following","catch","signInWithEmailAndPassword","signOut","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76c5b037.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyA79AKi494FNiNFUNjCBqqOneDthQMhpUE\",\r\n  authDomain: \"socialer-ab176.firebaseapp.com\",\r\n  databaseURL: \"https://socialer-ab176.firebaseio.com\",\r\n  projectId: \"socialer-ab176\",\r\n  storageBucket: \"socialer-ab176.appspot.com\",\r\n  messagingSenderId: \"62578825669\",\r\n  appId: \"1:62578825669:web:e65a6d0979b8c3f07093ac\",\r\n  measurementId: \"G-R00TB46SH7\"\r\n})\r\n\r\nconst db = firebaseApp.firestore()\r\nconst auth = firebase.auth()\r\nconst storage = firebase.storage()\r\n\r\nexport { db, auth, storage }\r\n","import React, { useState } from 'react';\r\nimport firebase from 'firebase'\r\n\r\nimport './Post.css'\r\nimport Avatar from '@material-ui/core/avatar'\r\nimport {Button, Input} from '@material-ui/core';\r\nimport { db } from './firebase'\r\n\r\n\r\nfunction Post({postId, crntuser, username, userAvatar, caption, imageURL, comments}) {\r\n  const [commentText,setCommentText] = useState('')\r\n\r\n  const addComment = (e) =>{\r\n    e.preventDefault()\r\n    if(commentText !== ''){\r\n    db.collection('posts').doc(postId).update({\r\n      comments: firebase.firestore.FieldValue.arrayUnion({\r\n        username: crntuser.displayName,\r\n        commenttext: commentText\r\n      })\r\n    })\r\n    }\r\n    else{\r\n      alert(\"bhai kaik lakh pachi comment kar\")\r\n    }\r\n    setCommentText('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__header\">\r\n        <Avatar src={userAvatar} alt={username} className=\"post__headerAvatar\" />\r\n        <h3>{username}</h3>\r\n      </div>\r\n      <img className=\"post__image\" src={imageURL} alt=\"Image not found\" />\r\n      <div className=\"post__footer\"><strong>{username}:</strong>{caption}</div>\r\n      <div className=\"post__commentbox\">\r\n        {\r\n          comments.map(comment => (\r\n          <div className=\"post__comment\"><strong>{comment.username}</strong> : {comment.commenttext}</div>\r\n          ))\r\n        }\r\n        { crntuser?.displayName ? (\r\n          <form className=\"post__commentadder\">\r\n          <Input\r\n          type=\"text\"\r\n          placeholder=\"share your thoughts on this post\"\r\n          value={commentText}\r\n          onChange={(e) => setCommentText(e.target.value)}\r\n          />\r\n          <Button type=\"submit\" onClick={addComment}>Comment</Button>\r\n          </form>\r\n        ) : (\r\n          <p>Login to comment</p>\r\n        )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase'\r\n//import './ImageUpload.css'\r\nimport {Button, Input} from '@material-ui/core';\r\nimport { storage, db } from './firebase'\r\n\r\n\r\nfunction ImageUpload({username, userAvatar}) {\r\n  const [caption,setCaption] = useState('')\r\n  const [image,setImage] = useState(null)\r\n  const [progress,setProgress] = useState(0)\r\n\r\n  const handleChange = (e) => {\r\n    if(e.target.files[0]){\r\n      setImage(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const handleUpload = () =>{\r\n    const uploadTask = storage.ref(`Images/${image.name}`).put(image)\r\n    uploadTask.on(\"state_changed\",(snapshot) => {\r\n      const pgrs = Math.round(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      )\r\n      setProgress(pgrs)\r\n      console.log(snapshot.bytesTransferred / snapshot.totalBytes )\r\n    },(error) => {\r\n      console.log(error);\r\n    },\r\n    () =>{\r\n      storage\r\n        .ref('Images')\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          db.collection('posts').add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            caption: caption,\r\n            imageURL: url,\r\n            username: username,\r\n            userAvatar: userAvatar,\r\n            comments: []\r\n          })\r\n          alert(\"Posted...\")\r\n          setProgress(0)\r\n          setCaption(\"\")\r\n          setImage(null)\r\n        })\r\n    }\r\n  )\r\n  }\r\n\r\n  return (\r\n    <div className=\"ImageUpload\">\r\n      <Input type=\"text\" name=\"caption\" onChange={event => setCaption(event.target.value)} value={caption} placeholder=\"Enter your caption\" />\r\n      <progress value={progress} max=\"100\" />\r\n      <Input type=\"file\" name=\"image\" onChange={handleChange} />\r\n      <Button onClick={handleUpload}>\r\n        Upload\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React from 'react'\r\nimport './UserPopUp'\r\n\r\nfunction UserPopUp() {\r\n  return (\r\n    <div className=\"UserPopUp\">\r\n      User Profiles\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserPopUp\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Avatar from '@material-ui/core/avatar'\nimport Post from './Post'\nimport ImageUpload from './ImageUpload'\nimport UserPopUp from './UserPopUp'\nimport { db, auth, storage } from './firebase'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport {Button, Input} from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #aa4488',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [posts,setPosts] = useState([]);\n  const [open,setOpen] = useState(false)\n  const [openSignIn,setOpenSignIn] = useState(false)\n  const [openPost,setOpenPost] = useState(false)\n  const [openUser,setOpenUser] = useState(false)\n  const [username,setUsername] = useState('')\n  const [password,setPassword] = useState('')\n  const [email,setEmail] = useState('')\n  const [userImage,setUserImage] = useState(null)\n  const [user,setUser] = useState(null)\n  const [avatarURL,setAvatarURL] = useState(null)\n\n  const [modalStyle] = React.useState(getModalStyle);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if(authUser){\n        //USer has logged in\n        //console.log(authUser)\n        setUser(authUser)\n        if(authUser.photoURL != null){\n          setAvatarURL(authUser.photoURL)\n        }\n        if(authUser.displayName){\n\n        }else{\n          return authUser.updateProfile({\n            displayName: username\n          })\n        }\n      }\n      else{\n        //logged out\n        setUser(null)\n      }\n\n    })\n\n    return () => {\n      unsubscribe()\n    }\n  },[user,username])\n\n  useEffect(() =>{\n    db.collection('posts').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })))\n    })\n  },[])\n\n  const handleChange = (e) => {\n    if(e.target.files[0]){\n      setUserImage(e.target.files[0])\n    }\n  }\n\n  const signUp = (event) => {\n    event.preventDefault()\n\n    auth.createUserWithEmailAndPassword(email,password)\n    .then((authUser) => {\n      authUser.user.updateProfile({\n        displayName: username\n      })\n      const uploadTask = storage.ref(`ProfileImages/${username}`).put(userImage)\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          console.log(snapshot.bytesTransferred / snapshot.totalBytes )\n        },\n        (error) => {alert(error.message)},\n        () => {\n          storage\n            .ref('ProfileImages')\n            .child(username)\n            .getDownloadURL()\n            .then((url => {\n              setAvatarURL(url)\n              authUser.user.updateProfile({\n                photoURL: url\n              })\n\n          db.collection('userinfo').add({\n            email: email,\n            username: username,\n            photoURL: url,\n            followers: [],\n            following: [],\n            posts: []\n          })\n\n          alert(\"user created successfully\")\n            }))\n        }\n      )\n\n    })\n    .catch((error) => alert(error.message))\n\n    setOpen(false)\n  }\n\n  const signIn = (event) => {\n    event.preventDefault()\n\n    auth.signInWithEmailAndPassword(email,password)\n    .then((authUser) => {\n      setUser(authUser)\n      setAvatarURL(authUser.user.photoURL)\n      console.log(authUser)\n    })\n    .catch((error) => alert(error.message))\n\n    setOpenSignIn(false)\n  }\n\n  return (\n    <div className=\"app\">\n      {user?.displayName ? (\n        <div className=\"app__postButton\">\n          <Button type=\"button\" name=\"button\" onClick={() => setOpenPost(true)} endIcon={<CloudUploadIcon />}>  Add</Button>\n        </div>\n        ) : (\n          <h3>Log in or SignUp to start adding your movements too..</h3>\n        )}\n      <Modal\n        open={openPost}\n        onClose={() => setOpenPost(false)}\n      >\n      <div style={modalStyle} className={classes.paper}>\n        { user?.displayName ? (\n          <ImageUpload username={user.displayName} userAvatar={avatarURL}/>\n\n          ) : (\n          <h3>You need to login... How am I supposed to allow you to post without login..</h3>\n\n          )}\n      </div>\n      </Modal>\n      <Modal //Sgn UP model\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n      <div style={modalStyle} className={classes.paper}>\n        <div id=\"simple-modal-description\">\n          <center>\n            <img className=\"app__headerImage\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"logo\" />\n          </center>\n          <form className=\"app_signUp\">\n            <Input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Input type=\"file\" name=\"image\" onChange={handleChange} />\n\n            <Button  type=\"submit\" onClick={signUp}>SIgn Up</Button>\n          </form>\n        </div>\n\n      </div>\n      </Modal>\n\n      <Modal //Sign in model\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n      >\n      <div style={modalStyle} className={classes.paper}>\n        <div id=\"simple-modal-description\">\n          <center>\n            <img className=\"app__headerImage\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"logo\" />\n          </center>\n          <form className=\"app_signUp\">\n\n            <Input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button  type=\"submit\" onClick={signIn}>SIgn In</Button>\n          </form>\n        </div>\n\n      </div>\n      </Modal>\n      <Modal\n        open={openUser}\n        onClose={() => setOpenUser(false)}\n      >\n      <div style={modalStyle} className={classes.paper}>\n      <UserPopUp />\n      </div>\n      </Modal>\n\n      {/* main app */}\n      <div className=\"app__header\">\n        <div className=\"app__headerImage\">\n          Socialer\n        </div>\n        <div className=\"app__headerLogin\">\n        {user ? (\n          <div className=\"app__headerRight\">\n          <Avatar src={avatarURL} alt={username} onClick={() => setOpenUser(true)}/>\n          <Button onClick={() => auth.signOut()} id=\"signup-btn\">Log Out</Button>\n          </div>\n        ): (\n        <div>\n          <Button onClick={() => setOpenSignIn(true)} >Sign In</Button>\n          <Button onClick={() => setOpen(true)} >SignUp</Button>\n        </div>\n        )}\n        </div>\n      </div>\n      {\n        posts.map(({id,post}) => (\n          <Post key={id} postId={id} crntuser={user} username={post.username} userAvatar={post.userAvatar} caption={post.caption} imageURL={post.imageURL} comments={post.comments}/>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}